#!/usr/bin/env nodejs

var builder = require('buildify'),
    request = require('request');

var baseDir = __dirname + '/..',
    outputDir = baseDir + '/static/libs';

var libs = {
    'jquery.min': 'http://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min',
    'require.min': 'http://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min',
    'require-text.min': 'http://cdnjs.cloudflare.com/ajax/libs/require-text/2.0.10/text.min',
    'underscore-min': 'http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.5.2/underscore-min',
    'backbone-min': 'http://cdnjs.cloudflare.com/ajax/libs/backbone.js/1.1.0/backbone-min',
    'nprogress.min': 'http://cdnjs.cloudflare.com/ajax/libs/nprogress/0.1.2/nprogress.min'
};

// Fetch libaries
builder.task({
    name: "libs",
    task: function () {
        for (var lib in libs) {
            !function fetch(lib) {
                request(libs[lib] + ".js", function (error, response, body) {
                    if (!error && response.statusCode == 200) {
                        builder('/')
                            .setContent(body)
                            .save(outputDir + "/" + lib + ".js");
                    } else {
                        console.error(error);
                    }
                });
                request(libs[lib].substr(0, libs[lib].length - 4) + ".js", function (error, response, body) {
                    if (!error && response.statusCode == 200) {
                        builder('/')
                            .setContent(body)
                            .save(outputDir + "/" + lib.substr(0, lib.length - 4) + ".js");
                    } else {
                        console.error(error);
                    }
                });
                request(libs[lib] + ".map", function (error, response, body) {
                    if (!error && response.statusCode == 200) {
                        builder('/')
                            .setContent(body)
                            .save(outputDir + "/" + lib + ".map");
                    } else {
                        console.error(error);
                    }
                });
            }(lib);
        }
    }
});