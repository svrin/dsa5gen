#!/usr/bin/env node

var builder = require('buildify'),
    path = require('path'),
    glob = require('glob'),
    coffee = require('coffee-script');

var baseDir = __dirname + '/..',
    sourceDir = baseDir + '/data',
    utilDir = baseDir + '/util',
    outputDir = baseDir + '/gen/data';

var template = outputDir + "/template.hbs";

var libList = [
    'lib/jquery.min.js',
    'lib/require.min.js',
    'lib/require-text.min.js',
    'lib/underscore-min.js',
    'lib/backbone-min.js',
    'lib/nprogress.min.js'
];

//Files to concatenate into main file
var dirList = [
    'culture',
    'profession',
    'lifegrade',
    'race',
    'vantage',
    'character'
];

// Build data
for (var index in dirList) {
    builder.task({
        name: dirList[index],
        task: function () {
            dir = this.name;

            builder('/')
                .concat(glob.sync(sourceDir + "/" + dir + "/**/*.coffee"))
                .perform(function (content) {
                    return coffee.compile(content, {bare: true});
                })
                .perform(function (content) {
                    return content.replace(/.{2}sourceMappingURL.+/g, '');
                })
                .wrap(template, {dir: dir})
                .save(outputDir + "/" + dir + ".js")
                .uglify()
                .save(outputDir + "/" + dir + ".min.js");
        }
    });
}

// Build app
builder.task({
    name: "app",
    task: function () {
        builder('/')
            .concat(glob.sync(utilDir + "/*.coffee"))
            .perform(function (content) {
                return coffee.compile(content, {bare: true});
            })
            .perform(function (content) {
                return content.replace(/.{2}sourceMappingURL.+/g, '');
            })
            .save(outputDir + "/../app.js")
            .uglify()
            .save(outputDir + "/../app.min.js");
    }
});

// Write cache manifest
builder.task({
    name: "manifest",
    task: function () {
        builder('/')
            .setContent('')
            .perform(function (content) {
                content += 'CACHE MANIFEST' + "\n";
                content += '# ' + (new Date()).toJSON() + "\n";

                content += '' + "\n";
                content += 'CACHE:' + "\n";
                for (var idir in dirList) {
                    content += "/" + path.relative(baseDir, outputDir + "/" + dirList[idir] + ".js") + "\n";
                    content += "# /" + path.relative(baseDir, outputDir + "/" + dirList[idir] + ".min.js") + "\n";
                }
                content += '' + "\n";
                for (var ilib in libList) {
                    content += "/" + libList[ilib] + "\n";
                }

                content += '' + "\n";
                content += 'NETWORK:' + "\n";
                content += '*' + "\n";
                return content
            })
            .save(outputDir + "/../resources/appcache.mf");
    }
});

